$.fn.graphix = function (f) {
    var n = {
        width: 600,
        height: 500,
        onelementclick: function (i) {},
        oncategoryclick: function (i) {},
        type: "bar",
        background: "#101010"
    };
    var f = $.extend(n, f);
    var g;
    var D = $(this);
    D.wrap("<div />");
    var m = D.parent();
    var E = ["0-#e77200-#862300:15-#e77200", "0-#ff4884-#75002c:15-#e70067", "0-#159c03-#030:15-#159c03", "0-#037a9c-#004055:15-#037a9c", "0-#ee0510-#a90000:15-#ee0510", "0-#053cee-#2800a9:15-#053cee", "0-#05eea4-#00a950:15-#05eea4", "0-#e0ee05-#a3a900:15-#e0ee05", "0-#ee05eb-#a700a9:15-#ee05eb", "0-#f6607d-#d23756:15-#f6607d", "0-#dd6e3c-#f94f00:15-#dd6e3c", "0-#c6d600-#84871c:15-#c6d600", "0-#7a62b5-#503a87:15-#7a62b5", "0-#b9c39a-#91a77c:15-#b9c39a"];
    var v = ["#e77200", "#e70067", "#159c03", "#037a9c", "#ee0510", "#053cee", "#05eea4", "#e0ee05", "#ee05eb", "#f6607d", "#dd6e3c", "#c6d600", "#7a62b5", "#b9c39a"];
    var t = $.makeArray(D.find("thead th"));
    var r = t.length;
    if (r == 0) {
        r = 1
    }
    var B = $.makeArray(D.find("tbody th"));
    var H = new Array();
    var z = 0,
        A, x;
    var C = new Array();
    var F = f.height - 70;
    var I = (f.height - 100) / 10;
    var u = 0,
        G = 0;
    var q = new Array();
    var J = D.find("caption").html();
    var y = D.find("caption#legend").html();
    var d = D.find("caption").width();
    for (A = 0; A < B.length; A++) {
        H[A] = new Array();
        for (x = 0; x < r; x++) {
            H[A][x] = D.find("tbody tr:eq(" + A + ") td:eq(" + x + ")").html();
            if (Math.ceil(parseInt(H[A][x])) > z) {
                z = Math.ceil(H[A][x])
            }
        }
    }
    u = H[0].length * B.length;
    if (f.background == "none") {
        $(m).css({
            width: f.width,
            height: f.height
        })
    } else {
        $(m).css({
            width: f.width,
            height: f.height,
            background: f.background
        })
    }
    var c = Raphael($(this).parent()[0], f.width, f.height);
    $(D).remove();
    var o, s;

    function p() {
        s = c.path("M40 30L40 " + (f.height - 70)).attr({
            stroke: "#717171"
        });
        o = c.path("M40 " + (f.height - 70) + "L" + (f.width - 30) + " " + (f.height - 70)).attr({
            stroke: "#717171"
        });
        c.path("M" + (f.width - 29) + " 30L " + (f.width - 29) + " " + (f.height - 70)).attr({
            stroke: "#666666"
        });
        c.text(f.width - 19, f.height / 2, y).attr({
            fill: "#717171"
        }).rotate(90);
        c.text(20, f.height - 70, "0").attr({
            fill: "#717171"
        });
        $(m).prepend("<span style='position:absolute;color:#ffffff;padding-left:5px;'>" + J + "</span>");
        var j = 30;
        var i = 0;
        while (j < (f.height - 70)) {
            c.text(20, j, z - i + " ").attr({
                fill: "#888888"
            });
            y_line = c.path("M40 " + (j) + " L" + (f.width - 30) + " " + (j)).attr({
                stroke: "#777777",
                "stroke-dasharray": "-"
            });
            j = j + I;
            i = Math.floor(i + z / 10);
            G++
        }
    }
    function a() {
        I = (f.width - 70) / 10;
        s = c.path("M30 30L30 " + (f.height - 70)).attr({
            stroke: "#717171"
        });
        o = c.path("M30 " + (f.height - 70) + "L" + (f.width - 40) + " " + (f.height - 70)).attr({
            stroke: "#717171"
        });
        c.text(30, f.height - 60, "0").attr({
            fill: "#717171"
        });
        $(m).prepend("<span style='position:absolute;color:#ffffff;padding-left:5px;'>" + J + "</span>");
        c.path("M30 30L" + (f.width - 40) + " 30 ").attr({
            stroke: "#717171"
        });
        c.text(f.width - 140, 20, y).attr({
            fill: "#717171",
            "font-size": f.height / 35
        });
        var j = I + 30;
        var i = Math.floor(z / 10);
        while (j < (f.width - 10)) {
            c.text(j, F + 10, i + " ").attr({
                fill: "#888888"
            });
            y_line = c.path("M " + (j) + " 30 L" + (j) + " " + (F)).attr({
                stroke: "#777777",
                "stroke-dasharray": "-"
            });
            j = j + I;
            i = Math.floor(i + z / 10);
            G++
        }
        $(m).prepend("<span style='position:absolute;color:#ffffff;padding-left:5px;'>" + J + "</span>")
    }
    function k() {
        var L = Math.floor((f.width - 70) / u - (B.length / 1.5));
        var N = new Array();
        var K = 43,
            i, j = 0;
        C = new Array();
        for (A = 0; A < B.length; A++) {
            for (x = 0; x < t.length; x++) {
                i = Math.floor(H[A][x] / z * G * I);
                C[j] = c.rect(K, F - i, L, i).attr({
                    fill: E[x],
                    stroke: v[x]
                });
                $(C[j].node).attr("id", H[A][x] + " " + t[x].innerHTML + " " + B[A].innerHTML);
                N[j] = i;
                K = K + L + 2;
                C[j].click(function () {
                    f.onelementclick($(this.node).attr("id"))
                });
                j++
            }
            c.text(K - (L / 2 + (L / 2) * (t.length - 1)), F + 10, B[A].innerHTML).attr({
                fill: "#CCCCCC"
            });
            K = K + t.length
        }
        o.toFront();
        K = 40;
        var M = 0;
        for (A = 0; A < t.length; A++) {
            i = c.rect(K, F + 35, 20, 20).attr({
                fill: E[A],
                stroke: v[A]
            });
            $(i.node).attr("id", t[A].innerHTML);
            i.click(function () {
                f.oncategoryclick($(this.node).attr("id"))
            });
            i.mouseover(function () {
                g = c.text(this.attr("x"), this.attr("y") + 27, $(this.node).attr("id")).attr({
                    fill: "#ffffff"
                });
                var O = "" + this.attr("stroke");
                for (x = 0; x < C.length; x++) {
                    if (C[x].attr("stroke") != O) {
                        C[x].animate({
                            height: 0,
                            y: F
                        }, 1300, "bounce")
                    }
                }
            });
            i.mouseout(function () {
                g.remove();
                var O = "" + this.attr("stroke");
                for (x = 0; x < C.length; x++) {
                    if (C[x].attr("stroke") != O) {
                        C[x].animate({
                            height: N[x],
                            y: F - N[x]
                        }, 1300, "bounce")
                    }
                }
            });
            K = K + f.width / (t.length + 1)
        }
        c.text(90, F + 25, "Categories: Hover to filter/show labels").attr({
            fill: "#ffffff"
        })
    }
    function w() {
        var M = Math.floor((f.height - 110) / u - (t.length / 1.5));
        var O = 0;
        var L = 40,
            i, N = new Array(),
            P, K, j = 0;
        for (A = 0; A < B.length; A++) {
            P = 30;
            K = 0;
            for (x = 0; x < t.length; x++) {
                i = Math.floor(H[A][x] / z * G * I);
                if (i > K) {
                    O = i - K
                } else {
                    O = K - i;
                    P = P + i - K
                }
                N[j] = c.rect(P, L, O, M).attr({
                    fill: E[x],
                    stroke: v[x]
                });
                $(N[j].node).attr("id", H[A][x] + " " + t[x].innerHTML + " " + B[A].innerHTML);
                N[j++].click(function () {
                    f.onelementclick($(this.node).attr("id"))
                });
                if (i > K) {
                    P = P + i - K
                }
                K = i;
                L = L + M + 2
            }
            c.text(20, L - M * 2, B[A].innerHTML).attr({
                fill: "#717171"
            }).rotate(-90);
            L = L + t.length
        }
        s.toFront();
        L = 40;
        for (A = 0; A < t.length; A++) {
            i = c.rect(L, F + 35, 20, 20).attr({
                fill: E[A],
                stroke: v[A]
            });
            $(i.node).attr("id", t[A].innerHTML);
            i.click(function () {
                f.oncategoryclick($(this.node).attr("id"))
            });
            i.mouseover(function () {
                g = c.text(this.attr("x"), this.attr("y") + 27, $(this.node).attr("id")).attr({
                    fill: "#ffffff"
                });
                var Q = "" + this.attr("stroke");
                for (x = 0; x < N.length; x++) {
                    if (N[x].attr("stroke") != Q) {
                        N[x].animate({
                            opacity: 0,
                            "stroke-opacity": 0
                        }, 1300, ">")
                    }
                }
            });
            i.mouseout(function () {
                g.remove();
                var Q = "" + this.attr("stroke");
                for (x = 0; x < N.length; x++) {
                    if (N[x].attr("stroke") != Q) {
                        N[x].animate({
                            opacity: 1,
                            "stroke-opacity": 1
                        }, 1300, "bounce")
                    }
                }
            });
            L = L + f.width / (t.length + 1)
        }
        c.text(90, F + 25, "Categories: Hover to filter/show labels").attr({
            fill: "#ffffff"
        })
    }
    function l() {
        var M, L, K;
        var j, i;
        var N = new Array();
        q = new Array();
        for (A = 0; A < t.length; A++) {
            M = (f.width - 10) / B.length;
            L = Math.floor(H[0][A] / z * G * I);
            K = "M40 " + F + " L" + M + " " + (F - L) + " ";
            q[A] = c.set();
            j = M;
            i = L;
            for (x = 0; x < B.length; x++) {
                L = Math.floor(H[x][A] / z * G * I);
                q[A].push(c.circle(M, (F - L), 2).attr({
                    stroke: v[A],
                    fill: v[A],
                    "stroke-width": 2
                }));
                K = K + j + " " + (F - i) + " L " + M + " " + (F - L) + " ";
                j = M;
                i = L;
                M = M + (f.width - 31) / B.length
            }
            N[A] = c.path(K).attr({
                stroke: v[A],
                "stroke-width": 2
            });
            $(N[A].node).attr("id", t[A].innerHTML);
            N[A].click(function () {
                f.onelementclick($(this.node).attr("id"))
            })
        }
        M = (f.width - 40) / B.length;
        for (A = 0; A < B.length; A++) {
            c.text(M, F + 10, B[A].innerHTML).attr({
                fill: "#ffffff"
            });
            M = M + (f.width - 40) / B.length
        }
        o.toFront();
        M = 40;
        var O = 0;
        for (A = 0; A < t.length; A++) {
            L = c.rect(M, F + 35, 20, 20).attr({
                fill: v[A],
                stroke: v[A]
            });
            $(L.node).attr("id", t[A].innerHTML);
            L.click(function () {
                f.oncategoryclick($(this.node).attr("id"))
            });
            L.mouseover(function () {
                var P = "" + this.attr("stroke");
                g = c.text(this.attr("x"), this.attr("y") + 27, $(this.node).attr("id")).attr({
                    fill: "#ffffff"
                });
                for (x = 0; x < N.length; x++) {
                    if (N[x].attr("stroke") != P) {
                        q[x].attr({
                            opacity: 0
                        });
                        N[x].animate({
                            opacity: 0
                        }, 1300, ">")
                    }
                }
            });
            L.mouseout(function () {
                g.remove();
                var P = "" + this.attr("stroke");
                for (x = 0; x < N.length; x++) {
                    if (N[x].attr("stroke") != P) {
                        N[x].animate({
                            opacity: 1
                        }, 1300, "bounce");
                        q[x].attr({
                            opacity: 1
                        })
                    }
                }
            });
            M = M + f.width / (t.length + 1)
        }
        c.text(90, F + 25, "Categories: Hover to filter/show labels").attr({
            fill: "#ffffff"
        })
    }
    function b() {
        var O = f.width / 2,
            L = f.height / 2,
            i = f.width / 3;
        $(m).prepend("<span style='position:absolute;color:#ffffff;padding-left:5px;font-size:10px'>" + J + "</span>");
        var R = Math.PI / 180;

        function N(ab, aa, W, ad, Z, ac) {
            var Y = ab + W * Math.cos(-ad * R),
                X = ab + W * Math.cos(-Z * R),
                af = aa + W * Math.sin(-ad * R),
                ae = aa + W * Math.sin(-Z * R);
            return c.path(["M", ab, aa, "L", Y, af, "A", W, W, 0, +(Z - ad > 180), 0, X, ae, "z"]).attr({
                fill: 90 + "" + E[ac],
                stroke: v[ac]
            })
        }
        var V = 0;
        var M, U, T;
        var K, j;
        var Q, S = 0,
            P = new Array();
        for (A = 0; A < B.length; A++) {
            S = S + parseInt(H[A][0])
        }
        for (A = 0; A < B.length; A++) {
            M = parseInt(H[A][0]) / S * 360;
            Q = V + M;
            U = O + (i + 45) * Math.cos(-(V + M / 2) * R);
            T = L + (i + 25) * Math.sin(-(V + M / 2) * R);
            K = O + (i - i / 4) * Math.cos(-(V + M / 2) * R);
            j = L + (i - i / 4) * Math.sin(-(V + M / 2) * R);
            c.text(U, T, B[A].innerHTML).attr({
                fill: "#ffffff"
            }).toFront();
            P[A] = N(O, L, i, V, Q, A);
            $(P[A].node).attr("id", H[A][0] + " " + B[A].innerHTML);
            P[A].click(function () {
                f.onelementclick($(this.node).attr("id"))
            });
            P[A].mouseover(function () {
                var W = "" + this.attr("stroke");
                for (x = 0; x < P.length; x++) {
                    if (P[x].attr("stroke") != W) {
                        P[x].animate({
                            opacity: 0,
                            "stroke-opacity": 0
                        }, 1300, ">")
                    }
                }
            });
            P[A].mouseout(function () {
                var W = "" + this.attr("stroke");
                for (x = 0; x < P.length; x++) {
                    if (P[x].attr("stroke") != W) {
                        P[x].animate({
                            opacity: 1,
                            "stroke-opacity": 1
                        }, 1300, "bounce")
                    }
                }
            });
            c.text(K, j, Math.floor(H[A][0] / S * 100) + "%").attr({
                fill: "#ffffff",
                "font-size": i / 12
            });
            V = Q
        }
    }
    function e() {
        var M, P, O, i = new Array(),
            Q = new Array();
        var L, K;
        q = new Array();
        for (A = 0; A < t.length; A++) {
            M = (f.width - 10) / B.length;
            P = Math.floor(H[0][A] / z * G * I);
            var N = "M40 " + F + " L" + M + " " + (F - P) + " ";
            L = M;
            K = P;
            q[A] = c.set();
            for (x = 0; x < B.length; x++) {
                P = Math.floor(H[x][A] / z * G * I);
                q[A].push(c.circle(M, (F - P), 2).attr({
                    stroke: v[A],
                    "stroke-width": 2,
                    fill: v[A]
                }));
                N = N + L + " " + (F - K) + " L " + M + " " + (F - P) + " ";
                L = M;
                K = P;
                M = M + (f.width - 35) / B.length
            }
            i[A] = c.path(N + L + " " + (F - K) + " L " + L + " " + (F) + " L 40 " + F + "z").attr({
                fill: v[A],
                stroke: v[A],
                "stroke-width": 1,
                opacity: 0.5,
                "stroke-opacity": 1
            });
            $(i[A].node).attr("id", t[A].innerHTML);
            i[A].click(function () {
                f.onelementclick($(this.node).attr("id"))
            })
        }
        M = (f.width - 40) / B.length;
        for (A = 0; A < B.length; A++) {
            c.text(M, F + 10, B[A].innerHTML).attr({
                fill: "#ffffff"
            });
            M = M + (f.width - 40) / B.length
        }
        o.toFront();
        M = 40;
        var j = 0;
        for (A = 0; A < t.length; A++) {
            P = c.rect(M, F + 35, 20, 20).attr({
                fill: v[A],
                stroke: v[A]
            });
            $(P.node).attr("id", t[A].innerHTML);
            P.click(function () {
                f.oncategoryclick($(this.node).attr("id"))
            });
            P.mouseover(function () {
                var R = "" + this.attr("stroke");
                g = c.text(this.attr("x"), this.attr("y") + 27, $(this.node).attr("id")).attr({
                    fill: "#ffffff"
                });
                for (x = 0; x < i.length; x++) {
                    if (i[x].attr("stroke") != R) {
                        i[x].animate({
                            opacity: 0,
                            "stroke-width": 0
                        }, 1300, ">");
                        q[x].attr({
                            opacity: 0
                        })
                    } else {
                        i[x].animate({
                            opacity: 1
                        }, 1300, ">")
                    }
                }
            });
            P.mouseout(function () {
                var R = "" + this.attr("stroke");
                g.remove();
                for (x = 0; x < i.length; x++) {
                    q[x].attr({
                        opacity: 1
                    });
                    i[x].animate({
                        opacity: 0.5,
                        "stroke-width": 0
                    }, 1300, ">")
                }
            });
            M = M + f.width / (t.length + 1)
        }
        c.text(90, F + 25, "Categories: Hover to filter/show labels").attr({
            fill: "#ffffff"
        })
    }
    function h() {
        var M, K, N, O = new Array(),
            L = 0;
        var j, i;
        for (A = 0; A < t.length; A++) {
            M = (f.width - 40) / B.length;
            K = Math.floor(H[0][A] / z * G * I);
            j = M;
            i = K;
            for (x = 0; x < B.length; x++) {
                K = Math.floor(H[x][A] / z * G * I);
                O[L] = c.circle(M, (F - K), H[x][A]).attr({
                    fill: v[A],
                    stroke: v[A],
                    "stroke-width": 1,
                    opacity: 0.5
                });
                $(O[L].node).attr("id", H[x][A] + " " + t[A].innerHTML + " " + B[x].innerHTML);
                O[L++].click(function () {
                    f.onelementclick($(this.node).attr("id"))
                });
                j = M;
                i = K;
                M = M + (f.width - 40) / B.length
            }
        }
        M = (f.width - 40) / B.length;
        for (A = 0; A < B.length; A++) {
            c.text(M, F + 10, B[A].innerHTML).attr({
                fill: "#ffffff"
            });
            M = M + (f.width - 40) / B.length
        }
        o.toFront();
        M = 40;
        var P = 0;
        for (A = 0; A < t.length; A++) {
            K = c.rect(M, F + 35, 20, 20).attr({
                fill: v[A],
                stroke: v[A]
            });
            $(K.node).attr("id", t[A].innerHTML);
            K.click(function () {
                f.oncategoryclick($(this.node).attr("id"))
            });
            K.mouseover(function () {
                var Q = "" + this.attr("stroke");
                g = c.text(this.attr("x"), this.attr("y") + 27, $(this.node).attr("id")).attr({
                    fill: "#ffffff"
                });
                for (x = 0; x < O.length; x++) {
                    if (O[x].attr("stroke") != Q) {
                        O[x].animate({
                            opacity: 0,
                            "stroke-width": 0
                        }, 1300, ">")
                    } else {
                        O[x].animate({
                            opacity: 1
                        }, 1300, ">")
                    }
                }
            });
            K.mouseout(function () {
                var Q = "" + this.attr("stroke");
                g.remove();
                for (x = 0; x < O.length; x++) {
                    O[x].animate({
                        opacity: 0.5,
                        "stroke-width": 0
                    }, 1300, "bounce")
                }
            });
            M = M + f.width / (t.length + 1)
        }
        c.text(90, F + 25, "Categories: Hover to filter/show labels").attr({
            fill: "#ffffff"
        })
    }
    switch (f.type) {
    case "bar":
        p();
        k();
        break;
    case "line":
        p();
        l();
        break;
    case "area":
        p();
        e();
        break;
    case "bubble":
        p();
        h();
        break;
    case "gantt":
        a();
        w();
        break;
    case "pie":
        b();
        break;
    default:
        p();
        k();
        break
    }
};